name: Image

on: [push, pull_request]

jobs:
  build_driver:
    name: Build Driver
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 50

    - name: Fetch Tags
      run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18.2

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: "3.8"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install --upgrade -r requirements.txt

    - uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build Driver
      run: |
        invoke build --release

    - uses: actions/upload-artifact@v1
      with:
        name: Driver
        path: bin

  build_container:
    name: Build Docker Container
    runs-on: ubuntu-latest
    needs:
      - build_driver
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 50

    - name: Fetch Tags
      run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18.2

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: "3.8"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install --upgrade -r requirements.txt

    - uses: actions/download-artifact@v1
      with:
        name: Driver
        path: bin

    - name: Make Driver executable
      run: "chmod +x bin/*"

    - name: Build Docker Container
      run: |
        invoke image --release

    - name: Package Container
      run: |
        TAG=$(git describe --long --tags --match='v*' --dirty)
        docker save -o ./container.tar.gz ofekmeister/csi-gcs:$TAG

    - uses: actions/upload-artifact@v1
      with:
        name: Container
        path: ./container.tar.gz

    - name: Login to Docker.io
      # Only Publish Images from our repository, not for MR
      if: github.event_name == 'push'
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      env:
        DOCKER_USERNAME: ${{ secrets.DockerUsername }}
        DOCKER_PASSWORD: ${{ secrets.DockerPassword }}

    - name: Publish Docker Container
      # Only Publish Images from our repository, not for MR
      if: github.event_name == 'push'
      run: |
        invoke image.deploy
